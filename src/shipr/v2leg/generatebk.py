# generated by datamodel-codegen:
#   filename:  ShipServiceDefinitions-OpenApi31Yaml.yaml
#   timestamp: 2024-02-17T19:09:14+00:00

from __future__ import annotations

from typing import List, Optional

from enum import Enum
from pydantic import AliasGenerator, BaseModel, ConfigDict, Field
from pydantic.alias_generators import to_snake, to_pascal


class BasePFType(BaseModel):
    model_config = ConfigDict(
        alias_generator=AliasGenerator(
            validation_alias=to_snake,
            serialization_alias=to_pascal,
        ),
        use_enum_values=True
    )


class Notifications(BasePFType):
    notification_type: List[str] = Field(..., description='')


class Address(BasePFType):
    address_line1: str = Field(..., alias='AddressLine1')
    address_line2: Optional[str] = Field(None, alias='AddressLine2')
    address_line3: Optional[str] = Field(None, alias='AddressLine3')
    town: Optional[str] = Field(None, alias='Town')
    postcode: Optional[str] = Field(None, alias='Postcode')
    country: str = Field(..., alias='Country')


class Enhancement(BasePFType):
    enhanced_compensation: Optional[str] = Field(None, alias='EnhancedCompensation')
    saturday_delivery_required: Optional[bool] = Field(
        None, alias='SaturdayDeliveryRequired'
    )


class HazardousGood(BasePFType):
    lqdgun_code: Optional[str] = Field(None, alias='LQDGUNCode')
    lqdg_description: Optional[str] = Field(None, alias='LQDGDescription')
    lqdg_volume: Optional[float] = Field(None, alias='LQDGVolume')
    firearms: Optional[str] = Field(None, alias='Firearms')


class Returns(BasePFType):
    returns_email: Optional[str] = Field(None, alias='ReturnsEmail')
    email_message: Optional[str] = Field(None, alias='EmailMessage')
    email_label: bool = Field(..., alias='EmailLabel')


class ContentDetail(BasePFType):
    country_of_manufacture: str = Field(..., alias='CountryOfManufacture')
    country_of_origin: Optional[str] = Field(None, alias='CountryOfOrigin')
    manufacturers_name: Optional[str] = Field(None, alias='ManufacturersName')
    description: str = Field(..., alias='Description')
    unit_weight: float = Field(..., alias='UnitWeight')
    unit_quantity: int = Field(..., alias='UnitQuantity')
    unit_value: float = Field(..., alias='UnitValue')
    currency: str = Field(..., alias='Currency')
    tariff_code: Optional[str] = Field(None, alias='TariffCode')
    tariff_description: Optional[str] = Field(None, alias='TariffDescription')
    article_reference: Optional[str] = Field(None, alias='ArticleReference')


class DateTimeRange(BasePFType):
    from_: str = Field(..., alias='From')
    to: str = Field(..., alias='To')


class ContentData(BasePFType):
    name: str = Field(..., alias='Name')
    data: str = Field(..., alias='Data')


class LabelItem(BasePFType):
    name: str = Field(..., alias='Name')
    data: str = Field(..., alias='Data')


class Barcode(BasePFType):
    name: str = Field(..., alias='Name')
    data: str = Field(..., alias='Data')


class Image(BasePFType):
    name: str = Field(..., alias='Name')
    data: str = Field(..., alias='Data')


class PrintType(Enum):
    all_parcels = 'ALL_PARCELS'
    single_parcel = 'SINGLE_PARCEL'


class Document(BasePFType):
    data: str = Field(..., alias='Data')


class ManifestShipment(BasePFType):
    shipment_number: str = Field(..., alias='ShipmentNumber')
    service_code: str = Field(..., alias='ServiceCode')


class CompletedShipment(BasePFType):
    shipment_number: Optional[str] = Field(None, alias='ShipmentNumber')
    out_bound_shipment_number: Optional[str] = Field(
        None, alias='OutBoundShipmentNumber'
    )
    in_bound_shipment_number: Optional[str] = Field(None, alias='InBoundShipmentNumber')
    partner_number: Optional[str] = Field(None, alias='PartnerNumber')


class CompletedReturnInfo(BasePFType):
    status: str = Field(..., alias='Status')
    shipment_number: str = Field(..., alias='ShipmentNumber')
    collection_time: DateTimeRange = Field(..., alias='CollectionTime')


class Authentication(BasePFType):
    user_name: str = Field(..., alias='UserName')
    password: str = Field(..., alias='Password')


class CompletedCancelInfo(BasePFType):
    status: Optional[str] = Field(None, alias='Status')
    shipment_number: Optional[str] = Field(None, alias='ShipmentNumber')


class SpecifiedNeighbour(BasePFType):
    address: Optional[List[Address]] = Field(None, alias='Address', description='')


class SafePlaceList(BasePFType):
    safe_place: Optional[List[str]] = Field(None, alias='SafePlace', description='')


class NominatedDeliveryDateList(BasePFType):
    nominated_delivery_date: Optional[List[str]] = Field(
        None, alias='NominatedDeliveryDate', description=''
    )


class ServiceCodes(BasePFType):
    service_code: Optional[List[str]] = Field(None, alias='ServiceCode', description='')


class Hours(BasePFType):
    open: Optional[str] = Field(None, alias='Open')
    close: Optional[str] = Field(None, alias='Close')
    close_lunch: Optional[str] = Field(None, alias='CloseLunch')
    after_lunch_opening: Optional[str] = Field(None, alias='AfterLunchOpening')


class Position(BasePFType):
    longitude: Optional[float] = Field(None, alias='Longitude')
    latitude: Optional[float] = Field(None, alias='Latitude')


class AlertType(Enum):
    error = 'ERROR'
    warning = 'WARNING'
    notification = 'NOTIFICATION'


class BaseRequest(BasePFType):
    authentication: Authentication = Field(..., alias='Authentication')


class Contact(BasePFType):
    business_name: str = Field(..., alias='BusinessName')
    contact_name: Optional[str] = Field(None, alias='ContactName')
    email_address: Optional[str] = Field(None, alias='EmailAddress')
    telephone: Optional[str] = Field(None, alias='Telephone')
    fax: Optional[str] = Field(None, alias='Fax')
    mobile_phone: Optional[str] = Field(None, alias='MobilePhone')
    senders_name: Optional[str] = Field(None, alias='SendersName')
    notifications: Optional[Notifications] = Field(None, alias='Notifications')


class InBoundDetails(BasePFType):
    contract_number: str = Field(..., alias='ContractNumber')
    service_code: str = Field(..., alias='ServiceCode')
    total_shipment_weight: Optional[str] = Field(None, alias='TotalShipmentWeight')
    enhancement: Optional[Enhancement] = Field(None, alias='Enhancement')
    reference_number1: Optional[str] = Field(None, alias='ReferenceNumber1')
    reference_number2: Optional[str] = Field(None, alias='ReferenceNumber2')
    reference_number3: Optional[str] = Field(None, alias='ReferenceNumber3')
    reference_number4: Optional[str] = Field(None, alias='ReferenceNumber4')
    reference_number5: Optional[str] = Field(None, alias='ReferenceNumber5')
    special_instructions1: Optional[str] = Field(None, alias='SpecialInstructions1')
    special_instructions2: Optional[str] = Field(None, alias='SpecialInstructions2')
    special_instructions3: Optional[str] = Field(None, alias='SpecialInstructions3')
    special_instructions4: Optional[str] = Field(None, alias='SpecialInstructions4')


class HazardousGoods(BasePFType):
    hazardous_good: List[HazardousGood] = Field(
        ..., alias='HazardousGood', description=''
    )


class ContentDetails(BasePFType):
    content_detail: List[ContentDetail] = Field(
        ..., alias='ContentDetail', description=''
    )


class CollectionInfo(BasePFType):
    collection_contact: Contact = Field(..., alias='CollectionContact')
    collection_address: Address = Field(..., alias='CollectionAddress')
    collection_time: Optional[DateTimeRange] = Field(None, alias='CollectionTime')


class ParcelContents(BasePFType):
    item: List[ContentData] = Field(..., alias='Item', description='')


class LabelData(BasePFType):
    item: List[LabelItem] = Field(..., alias='Item', description='')


class Barcodes(BasePFType):
    barcode: List[Barcode] = Field(..., alias='Barcode', description='')


class Images(BasePFType):
    image: List[Image] = Field(..., alias='Image', description='')


class ManifestShipments(BasePFType):
    manifest_shipment: List[ManifestShipment] = Field(
        ..., alias='ManifestShipment', description=''
    )


class CompletedShipments(BasePFType):
    completed_shipment: List[CompletedShipment] = Field(
        ..., alias='CompletedShipment', description=''
    )


class Alert(BasePFType):
    code: int = Field(..., alias='Code')
    message: str = Field(..., alias='Message')
    type: AlertType = Field(..., alias='Type')


class CompletedCancel(BasePFType):
    completed_cancel_info: Optional[CompletedCancelInfo] = Field(
        None, alias='CompletedCancelInfo'
    )


class PAF(BasePFType):
    postcode: Optional[str] = Field(None, alias='Postcode')
    count: Optional[int] = Field(None, alias='Count')
    specified_neighbour: Optional[List[SpecifiedNeighbour]] = Field(
        None, alias='SpecifiedNeighbour', description=''
    )

    @classmethod
    def from_postcode(cls, postcode: str) -> PAF:
        return cls(postcode=postcode)


class Department(BasePFType):
    department_id: Optional[List[int]] = Field(
        None, alias='DepartmentID', description=''
    )
    service_codes: Optional[List[ServiceCodes]] = Field(
        None, alias='ServiceCodes', description=''
    )
    nominated_delivery_date_list: Optional[NominatedDeliveryDateList] = Field(
        None, alias='NominatedDeliveryDateList'
    )


class Mon(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class Tue(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class Wed(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class Thu(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class Fri(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class Sat(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class Sun(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class BankHol(BasePFType):
    hours: Optional[Hours] = Field(None, alias='Hours')


class PrintLabelRequest(BaseRequest):
    shipment_number: str = Field(..., alias='ShipmentNumber')
    print_format: Optional[str] = Field(None, alias='PrintFormat')
    barcode_format: Optional[str] = Field(None, alias='BarcodeFormat')
    print_type: Optional[PrintType] = Field(None, alias='PrintType')


class PrintDocumentRequest(BaseRequest):
    shipment_number: str = Field(..., alias='ShipmentNumber')
    document_type: int = Field(..., alias='DocumentType')
    print_format: Optional[str] = Field(None, alias='PrintFormat')


class CreateManifestRequest(BaseRequest):
    department_id: Optional[int] = Field(None, alias='DepartmentId')


class PrintManifestRequest(BaseRequest):
    manifest_number: str = Field(..., alias='ManifestNumber')
    print_format: Optional[str] = Field(None, alias='PrintFormat')


class ReturnShipmentRequest(BaseRequest):
    shipment_number: str = Field(..., alias='ShipmentNumber')
    collection_time: DateTimeRange = Field(..., alias='CollectionTime')


class CCReserveRequest(BaseRequest):
    booking_reference: str = Field(..., alias='BookingReference')


class CancelShipmentRequest(BaseRequest):
    shipment_number: str = Field(..., alias='ShipmentNumber')


class Parcel(BasePFType):
    weight: Optional[float] = Field(None, alias='Weight')
    length: Optional[int] = Field(None, alias='Length')
    height: Optional[int] = Field(None, alias='Height')
    width: Optional[int] = Field(None, alias='Width')
    purpose_of_shipment: Optional[str] = Field(None, alias='PurposeOfShipment')
    invoice_number: Optional[str] = Field(None, alias='InvoiceNumber')
    export_license_number: Optional[str] = Field(None, alias='ExportLicenseNumber')
    certificate_number: Optional[str] = Field(None, alias='CertificateNumber')
    content_details: Optional[ContentDetails] = Field(None, alias='ContentDetails')
    shipping_cost: Optional[float] = Field(None, alias='ShippingCost')


class ParcelLabelData(BasePFType):
    parcel_number: Optional[str] = Field(None, alias='ParcelNumber')
    shipment_number: Optional[str] = Field(None, alias='ShipmentNumber')
    journey_leg: Optional[str] = Field(None, alias='JourneyLeg')
    label_data: Optional[LabelData] = Field(None, alias='LabelData')
    barcodes: Optional[Barcodes] = Field(None, alias='Barcodes')
    images: Optional[Images] = Field(None, alias='Images')
    parcel_contents: Optional[List[ParcelContents]] = Field(
        None, alias='ParcelContents', description=''
    )


class CompletedManifestInfo(BasePFType):
    department_id: int = Field(..., alias='DepartmentId')
    manifest_number: str = Field(..., alias='ManifestNumber')
    manifest_type: str = Field(..., alias='ManifestType')
    total_shipment_count: int = Field(..., alias='TotalShipmentCount')
    manifest_shipments: ManifestShipments = Field(..., alias='ManifestShipments')


class CompletedShipmentInfoCreatePrint(BasePFType):
    lead_shipment_number: Optional[str] = Field(None, alias='LeadShipmentNumber')
    shipment_number: Optional[str] = Field(None, alias='ShipmentNumber')
    delivery_date: Optional[str] = Field(None, alias='DeliveryDate')
    status: str = Field(..., alias='Status')
    completed_shipments: CompletedShipments = Field(..., alias='CompletedShipments')


class Alerts(BasePFType):
    alert: List[Alert] = Field(..., alias='Alert', description='')


class Departments(BasePFType):
    department: Optional[List[Department]] = Field(
        None, alias='Department', description=''
    )


class OpeningHours(BasePFType):
    mon: Optional[Mon] = Field(None, alias='Mon')
    tue: Optional[Tue] = Field(None, alias='Tue')
    wed: Optional[Wed] = Field(None, alias='Wed')
    thu: Optional[Thu] = Field(None, alias='Thu')
    fri: Optional[Fri] = Field(None, alias='Fri')
    sat: Optional[Sat] = Field(None, alias='Sat')
    sun: Optional[Sun] = Field(None, alias='Sun')
    bank_hol: Optional[BankHol] = Field(None, alias='BankHol')


class CancelShipmentRequest1(BasePFType):
    cancel_shipment_request: CancelShipmentRequest = Field(
        ..., alias='CancelShipmentRequest'
    )


class CCReserveRequest1(BasePFType):
    cc_reserve_request: CCReserveRequest = Field(..., alias='CCReserveRequest')


class CreateManifestRequest1(BasePFType):
    create_manifest_request: CreateManifestRequest = Field(
        ..., alias='CreateManifestRequest'
    )


class PrintDocumentRequest1(BasePFType):
    print_document_request: PrintDocumentRequest = Field(
        ..., alias='PrintDocumentRequest'
    )


class PrintLabelRequest1(BasePFType):
    print_label_request: PrintLabelRequest = Field(..., alias='PrintLabelRequest')


class PrintManifestRequest1(BasePFType):
    print_manifest_request: PrintManifestRequest = Field(
        ..., alias='PrintManifestRequest'
    )


class ReturnShipmentRequest1(BasePFType):
    return_shipment_request: ReturnShipmentRequest = Field(
        ..., alias='ReturnShipmentRequest'
    )


class BaseReply(BasePFType):
    alerts: Optional[Alerts] = Field(None, alias='Alerts')


class Parcels(BasePFType):
    parcel: List[Parcel] = Field(..., alias='Parcel', description='')


class ShipmentLabelData(BasePFType):
    parcel_label_data: List[ParcelLabelData] = Field(
        ..., alias='ParcelLabelData', description=''
    )


class CompletedManifests(BasePFType):
    completed_manifest_info: List[CompletedManifestInfo] = Field(
        ..., alias='CompletedManifestInfo', description=''
    )


class NominatedDeliveryDates(BasePFType):
    service_code: Optional[str] = Field(None, alias='ServiceCode')
    departments: Optional[Departments] = Field(None, alias='Departments')


class PostcodeExclusion(BasePFType):
    delivery_postcode: Optional[str] = Field(None, alias='DeliveryPostcode')
    collection_postcode: Optional[str] = Field(None, alias='CollectionPostcode')
    departments: Optional[Departments] = Field(None, alias='Departments')


class PostOffice(BasePFType):
    post_office_id: Optional[str] = Field(None, alias='PostOfficeID')
    business: Optional[str] = Field(None, alias='Business')
    address: Optional[Address] = Field(None, alias='Address')
    opening_hours: Optional[OpeningHours] = Field(None, alias='OpeningHours')
    distance: Optional[float] = Field(None, alias='Distance')
    availability: Optional[bool] = Field(None, alias='Availability')
    position: Optional[Position] = Field(None, alias='Position')
    booking_reference: Optional[str] = Field(None, alias='BookingReference')


class CreatePrintReply(BaseReply):
    completed_shipment_info_create_print: Optional[CompletedShipmentInfoCreatePrint] = (
        Field(None, alias='CompletedShipmentInfoCreatePrint')
    )
    label: Optional[Document] = Field(None, alias='Label')
    label_data: Optional[ShipmentLabelData] = Field(None, alias='LabelData')
    partner_code: Optional[str] = Field(None, alias='PartnerCode')


class PrintLabelReply(BaseReply):
    label: Optional[Document] = Field(None, alias='Label')
    label_data: Optional[ShipmentLabelData] = Field(None, alias='LabelData')
    partner_code: Optional[str] = Field(None, alias='PartnerCode')


class PrintDocumentReply(BaseReply):
    label: Optional[Document] = Field(None, alias='Label')
    label_data: Optional[ShipmentLabelData] = Field(None, alias='LabelData')
    document_type: Optional[Document] = Field(None, alias='DocumentType')


class CreateManifestReply(BaseReply):
    completed_manifests: Optional[CompletedManifests] = Field(
        None, alias='CompletedManifests'
    )


class PrintManifestReply(BaseReply):
    manifest: Optional[Document] = Field(None, alias='Manifest')


class ReturnShipmentReply(BaseReply):
    completed_shipment_info: Optional[CompletedReturnInfo] = Field(
        None, alias='CompletedShipmentInfo'
    )


class CCReserveReply(BaseReply):
    post_office: Optional[PostOffice] = Field(None, alias='PostOffice')


class CancelShipmentReply(BaseReply):
    completed_cancel: Optional[CompletedCancel] = Field(None, alias='CompletedCancel')


class InternationalInfo(BasePFType):
    parcels: Optional[Parcels] = Field(None, alias='Parcels')
    exporter_customs_reference: Optional[str] = Field(
        None, alias='ExporterCustomsReference'
    )
    recipient_importer_vat_no: Optional[str] = Field(
        None, alias='RecipientImporterVatNo'
    )
    original_export_shipment_no: Optional[str] = Field(
        None, alias='OriginalExportShipmentNo'
    )
    documents_only: Optional[bool] = Field(None, alias='DocumentsOnly')
    documents_description: Optional[str] = Field(None, alias='DocumentsDescription')
    value_under200_us_dollars: Optional[bool] = Field(
        None, alias='ValueUnder200USDollars'
    )
    shipment_description: Optional[str] = Field(None, alias='ShipmentDescription')
    comments: Optional[str] = Field(None, alias='Comments')
    invoice_date: Optional[str] = Field(None, alias='InvoiceDate')
    terms_of_delivery: Optional[str] = Field(None, alias='TermsOfDelivery')
    purchase_order_ref: Optional[str] = Field(None, alias='PurchaseOrderRef')


class ConvenientCollect(BasePFType):
    postcode: Optional[str] = Field(None, alias='Postcode')
    post_office: Optional[List[PostOffice]] = Field(
        None, alias='PostOffice', description=''
    )
    count: Optional[int] = Field(None, alias='Count')
    post_office_id: Optional[str] = Field(None, alias='PostOfficeID')


class SpecifiedPostOffice(BasePFType):
    postcode: Optional[str] = Field(None, alias='Postcode')
    post_office: Optional[List[PostOffice]] = Field(
        None, alias='PostOffice', description=''
    )
    count: Optional[int] = Field(None, alias='Count')
    post_office_id: Optional[str] = Field(None, alias='PostOfficeID')


class CancelShipmentReply1(BasePFType):
    cancel_shipment_reply: CancelShipmentReply = Field(..., alias='CancelShipmentReply')


class CCReserveReply1(BasePFType):
    cc_reserve_reply: CCReserveReply = Field(..., alias='CCReserveReply')


class CreateManifestReply1(BasePFType):
    create_manifest_reply: CreateManifestReply = Field(..., alias='CreateManifestReply')


class CreatePrintReply1(BasePFType):
    create_print_reply: CreatePrintReply = Field(..., alias='CreatePrintReply')


class PrintDocumentReply1(BasePFType):
    print_document_reply: PrintDocumentReply = Field(..., alias='PrintDocumentReply')


class PrintLabelReply1(BasePFType):
    print_label_reply: PrintLabelReply = Field(..., alias='PrintLabelReply')


class PrintManifestReply1(BasePFType):
    print_manifest_reply: PrintManifestReply = Field(..., alias='PrintManifestReply')


class ReturnShipmentReply1(BasePFType):
    return_shipment_reply: ReturnShipmentReply = Field(..., alias='ReturnShipmentReply')


class FindRequest(BaseRequest):
    convenient_collect: Optional[ConvenientCollect] = Field(
        None, alias='ConvenientCollect'
    )
    specified_post_office: Optional[SpecifiedPostOffice] = Field(
        None, alias='SpecifiedPostOffice'
    )
    paf: Optional[PAF] = Field(None, alias='PAF')
    safe_places: Optional[bool] = Field(None, alias='SafePlaces')
    nominated_delivery_dates: Optional[NominatedDeliveryDates] = Field(
        None, alias='NominatedDeliveryDates'
    )
    postcode_exclusion: Optional[PostcodeExclusion] = Field(
        None, alias='PostcodeExclusion'
    )


class FindReply(BaseReply):
    convenient_collect: Optional[ConvenientCollect] = Field(
        None, alias='ConvenientCollect'
    )
    specified_post_office: Optional[SpecifiedPostOffice] = Field(
        None, alias='SpecifiedPostOffice'
    )
    paf: Optional[PAF] = Field(None, alias='PAF')
    safe_place_list: Optional[SafePlaceList] = Field(None, alias='SafePlaceList')
    nominated_delivery_dates: Optional[NominatedDeliveryDates] = Field(
        None, alias='NominatedDeliveryDates'
    )
    postcode_exclusion: Optional[PostcodeExclusion] = Field(
        None, alias='PostcodeExclusion'
    )


class DeliveryOptions(BasePFType):
    convenient_collect: Optional[ConvenientCollect] = Field(
        None, alias='ConvenientCollect'
    )
    irts: Optional[bool] = Field(None, alias='IRTS')
    letterbox: Optional[bool] = Field(None, alias='Letterbox')
    specified_post_office: Optional[SpecifiedPostOffice] = Field(
        None, alias='SpecifiedPostOffice'
    )
    specified_neighbour: Optional[str] = Field(None, alias='SpecifiedNeighbour')
    safe_place: Optional[str] = Field(None, alias='SafePlace')
    pin: Optional[int] = Field(None, alias='PIN')
    named_recipient: Optional[bool] = Field(None, alias='NamedRecipient')
    address_only: Optional[bool] = Field(None, alias='AddressOnly')
    nominated_delivery_date: Optional[str] = Field(None, alias='NominatedDeliveryDate')
    personal_parcel: Optional[str] = Field(None, alias='PersonalParcel')


class FindReply1(BasePFType):
    find_reply: FindReply = Field(..., alias='FindReply')


class FindRequest1(BasePFType):
    find_request: FindRequest = Field(..., alias='FindRequest')


class RequestedShipment(BasePFType):
    department_id: Optional[int] = Field(None, alias='DepartmentId')
    shipment_type: str = Field(..., alias='ShipmentType')
    contract_number: str = Field(..., alias='ContractNumber')
    request_id: Optional[int] = Field(None, alias='RequestId')
    service_code: str = Field(..., alias='ServiceCode')
    pre_printed: Optional[bool] = Field(None, alias='PrePrinted')
    shipping_date: Optional[str] = Field(None, alias='ShippingDate')
    job_reference: Optional[str] = Field(None, alias='JobReference')
    recipient_contact: Contact = Field(..., alias='RecipientContact')
    recipient_address: Address = Field(..., alias='RecipientAddress')
    importer_contact: Optional[Contact] = Field(None, alias='ImporterContact')
    importer_address: Optional[Address] = Field(None, alias='ImporterAddress')
    exporter_contact: Optional[Contact] = Field(None, alias='ExporterContact')
    exporter_address: Optional[Address] = Field(None, alias='ExporterAddress')
    sender_contact: Optional[Contact] = Field(None, alias='SenderContact')
    sender_address: Optional[Address] = Field(None, alias='SenderAddress')
    total_number_of_parcels: Optional[int] = Field(None, alias='TotalNumberOfParcels')
    total_shipment_weight: Optional[float] = Field(None, alias='TotalShipmentWeight')
    enhancement: Optional[Enhancement] = Field(None, alias='Enhancement')
    delivery_options: Optional[DeliveryOptions] = Field(None, alias='DeliveryOptions')
    hazardous_goods: Optional[HazardousGoods] = Field(None, alias='HazardousGoods')
    returns: Optional[Returns] = Field(None, alias='Returns')
    drop_off_ind: Optional[str] = Field(None, alias='DropOffInd')
    print_own_label: Optional[bool] = Field(None, alias='PrintOwnLabel')
    collection_info: Optional[CollectionInfo] = Field(None, alias='CollectionInfo')
    international_info: Optional[InternationalInfo] = Field(
        None, alias='InternationalInfo'
    )
    reference_number1: Optional[str] = Field(None, alias='ReferenceNumber1')
    reference_number2: Optional[str] = Field(None, alias='ReferenceNumber2')
    reference_number3: Optional[str] = Field(None, alias='ReferenceNumber3')
    reference_number4: Optional[str] = Field(None, alias='ReferenceNumber4')
    reference_number5: Optional[str] = Field(None, alias='ReferenceNumber5')
    special_instructions1: Optional[str] = Field(None, alias='SpecialInstructions1')
    special_instructions2: Optional[str] = Field(None, alias='SpecialInstructions2')
    special_instructions3: Optional[str] = Field(None, alias='SpecialInstructions3')
    special_instructions4: Optional[str] = Field(None, alias='SpecialInstructions4')
    in_bound_contact: Optional[Contact] = Field(None, alias='InBoundContact')
    in_bound_address: Optional[Address] = Field(None, alias='InBoundAddress')
    in_bound_details: Optional[InBoundDetails] = Field(None, alias='InBoundDetails')
    exchange_instructions1: Optional[str] = Field(None, alias='ExchangeInstructions1')
    exchange_instructions2: Optional[str] = Field(None, alias='ExchangeInstructions2')
    exchange_instructions3: Optional[str] = Field(None, alias='ExchangeInstructions3')
    consignment_handling: Optional[bool] = Field(None, alias='ConsignmentHandling')


class CompletedShipmentInfo(BasePFType):
    lead_shipment_number: Optional[str] = Field(None, alias='LeadShipmentNumber')
    delivery_date: Optional[str] = Field(None, alias='DeliveryDate')
    status: str = Field(..., alias='Status')
    completed_shipments: CompletedShipments = Field(..., alias='CompletedShipments')
    requested_shipment: RequestedShipment = Field(..., alias='RequestedShipment')


class CreateShipmentRequest(BaseRequest):
    requested_shipment: RequestedShipment = Field(..., alias='RequestedShipment')


class CreateShipmentReply(BaseReply):
    completed_shipment_info: Optional[CompletedShipmentInfo] = Field(
        None, alias='CompletedShipmentInfo'
    )


class CreatePrintRequest(BaseRequest):
    requested_shipment: RequestedShipment = Field(..., alias='RequestedShipment')


class CreatePrintRequest1(BasePFType):
    create_print_request: CreatePrintRequest = Field(..., alias='CreatePrintRequest')


class CreateShipmentReply1(BasePFType):
    create_shipment_reply: CreateShipmentReply = Field(..., alias='CreateShipmentReply')


class CreateShipmentRequest1(BasePFType):
    create_shipment_request: CreateShipmentRequest = Field(
        ..., alias='CreateShipmentRequest'
    )
